{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Asus/Desktop/Tomato/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../food/food.service\";\nexport class TagsService {\n  constructor(foodService) {\n    this.foodService = foodService;\n    this.foodItems = [];\n    this.tagMap = {};\n  }\n\n  ngOnInit() {\n    this.getAllTags();\n  }\n\n  getAllTags() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // Admins will allow some mostly searched tags: eg show the mostly searched 5 tags\n      // Solely on the discretionary of the admins:\n      yield _this.foodService.getAllFoodItemsSync().then(resp => {\n        _this.foodItems = resp;\n      });\n      console.log(_this.foodItems);\n\n      for (let food of _this.foodItems) {\n        // console.log(food);\n        let foodTags = food.tags;\n        console.log(foodTags); // for(let tag of food.tags){\n        //   console.log(tag);\n        //   this.tagMap[tag.toLowerCase()]++;\n        // }\n      }\n\n      console.log(_this.tagMap);\n      return [{\n        name: 'All',\n        count: 8\n      }, {\n        name: 'NonVeg',\n        count: 2\n      }, {\n        name: 'Veg',\n        count: 2\n      }, {\n        name: 'South Indian',\n        count: 1\n      }, {\n        name: 'Birthday',\n        count: 2\n      }];\n    })();\n  }\n\n}\n\nTagsService.ɵfac = function TagsService_Factory(t) {\n  return new (t || TagsService)(i0.ɵɵinject(i1.FoodService));\n};\n\nTagsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TagsService,\n  factory: TagsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,WAAP,CAAkB;EAEtBC,YAAoBC,WAApB,EAA6C;IAAzB;IACpB,iBAAmB,EAAnB;IACA,cAAQ,EAAR;EAFkD;;EAIlDC,QAAQ;IACN,KAAKC,UAAL;EACD;;EAEKA,UAAU;IAAA;;IAAA;MACd;MACA;MACA,MAAM,KAAI,CAACF,WAAL,CAAiBG,mBAAjB,GAAuCC,IAAvC,CAA6CC,IAAD,IAAQ;QACxD,KAAI,CAACC,SAAL,GAAeD,IAAf;MACD,CAFK,CAAN;MAIAE,OAAO,CAACC,GAAR,CAAY,KAAI,CAACF,SAAjB;;MAEA,KAAI,IAAIG,IAAR,IAAgB,KAAI,CAACH,SAArB,EAA+B;QAC7B;QACA,IAAII,QAAQ,GAACD,IAAI,CAACE,IAAlB;QACAJ,OAAO,CAACC,GAAR,CAAYE,QAAZ,EAH6B,CAK7B;QACA;QACA;QACA;MACD;;MACDH,OAAO,CAACC,GAAR,CAAY,KAAI,CAACI,MAAjB;MAEA,OAAO,CACL;QAAEC,IAAI,EAAE,KAAR;QAAeC,KAAK,EAAE;MAAtB,CADK,EAEL;QAAED,IAAI,EAAE,QAAR;QAAkBC,KAAK,EAAE;MAAzB,CAFK,EAGL;QAAED,IAAI,EAAE,KAAR;QAAeC,KAAK,EAAE;MAAtB,CAHK,EAIL;QAAED,IAAI,EAAE,cAAR;QAAwBC,KAAK,EAAE;MAA/B,CAJK,EAKL;QAAED,IAAI,EAAE,UAAR;QAAoBC,KAAK,EAAE;MAA3B,CALK,CAAP;IArBc;EA4Bf;;AAtCqB;;;mBAAXhB,aAAWiB;AAAA;;;SAAXjB;EAAWkB,SAAXlB,WAAW;EAAAmB,YAFV","names":["TagsService","constructor","foodService","ngOnInit","getAllTags","getAllFoodItemsSync","then","resp","foodItems","console","log","food","foodTags","tags","tagMap","name","count","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Asus\\Desktop\\Tomato\\src\\app\\services\\tags\\tags.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { Tag } from 'src/app/shared/models/Tag';\nimport { FoodService } from '../food/food.service';\nimport { Food } from 'src/app/shared/models/food';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagsService implements OnInit{\n\n  constructor(private foodService : FoodService) { }\n  foodItems:Food[] = [];\n  tagMap ={};\n  \n  ngOnInit(): void {\n    this.getAllTags();\n  }\n\n  async getAllTags(){\n    // Admins will allow some mostly searched tags: eg show the mostly searched 5 tags\n    // Solely on the discretionary of the admins:\n    await this.foodService.getAllFoodItemsSync().then((resp)=>{\n      this.foodItems=resp;\n    })\n\n    console.log(this.foodItems);\n    \n    for(let food of this.foodItems){\n      // console.log(food);\n      let foodTags=food.tags;\n      console.log(foodTags);\n\n      // for(let tag of food.tags){\n      //   console.log(tag);\n      //   this.tagMap[tag.toLowerCase()]++;\n      // }\n    }\n    console.log(this.tagMap);\n    \n    return [\n      { name: 'All', count: 8 },\n      { name: 'NonVeg', count: 2 },\n      { name: 'Veg', count: 2 },\n      { name: 'South Indian', count: 1 },\n      { name: 'Birthday', count: 2 }\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}